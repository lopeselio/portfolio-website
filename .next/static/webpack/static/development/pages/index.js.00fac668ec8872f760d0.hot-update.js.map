{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.00fac668ec8872f760d0.hot-update.js","sources":["webpack:///./services/auth0.js"],"sourcesContent":["import auth0 from 'auth0-js'\r\nimport Cookies from 'js-cookie'\r\nimport jwt from 'jsonwebtoken'\r\nimport axios from 'axios'\r\n\r\nclass Auth0 {\r\n  constructor () {\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: 'dev-fee5qd3s.auth0.com',\r\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561',\r\n      redirectUri: 'http://localhost:3000/callback',\r\n      responseType: 'token id_token',\r\n      scope: 'openid profile'\r\n    })\r\n    this.login = this.login.bind(this)\r\n    this.logout = this.logout.bind(this)\r\n    this.handleAuthentication = this.handleAuthentication.bind(this)\r\n    // this.isAuthenticated = this.isAuthenticated.bind(this)\r\n  }\r\n\r\n  handleAuthentication () {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n        if (authResult && authResult.accessToken && authResult.idToken) {\r\n          this.setSession(authResult)\r\n          // history.replace('/home')\r\n          resolve()\r\n        } else if (err) {\r\n          // history.replace('/home')\r\n          reject(err)\r\n          console.log(err)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  setSession (authResult) {\r\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime())\r\n    // localStorage.setItem('access_token', authResult.accessToken)\r\n    // localStorage.setItem('id_token', authResult.idToken)\r\n    // localStorage.setItem('expires_at'.expiresAt)\r\n    // Cookies.set('user', authResult.idTokenPayload)\r\n    Cookies.set('jwt', authResult.idToken)\r\n    Cookies.set('expiresAt', expiresAt)\r\n  }\r\n\r\n  login () {\r\n    this.auth0.authorize()\r\n  }\r\n\r\n  logout () {\r\n    Cookies.remove('user')\r\n    Cookies.remove('jwt')\r\n    Cookies.remove('expiresAt')\r\n\r\n    this.auth0.logout({\r\n      returnTo: '',\r\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561'\r\n    })\r\n  }\r\n\r\n  async getJWKS() {\r\n    const res = await axios.get('https://dev-fee5qd3s.auth0.com/.well-known/jwks.json')\r\n    const jwks = res.data\r\n    return jwks\r\n  }\r\n\r\n  // isAuthenticated () {\r\n  //   const expiresAt = Cookies.getJSON('expiresAt')\r\n  //   // console.log(new Date().getTime() < expiresAt)\r\n  //   return new Date().getTime() < expiresAt\r\n  // }\r\n\r\n  async verifyToken (token) {\r\n    if (token) {\r\n      const decodedToken = jwt.decode(token, { complete: true})\r\n      const jwks = await this.getJWKS()\r\n      const jwk = jwks.keys[0]\r\n      // BUILD CERTIFICATE\r\n      let cert = jwk.x5c[0];\r\n      cert = cert.match(/.{1,64}/g).join('\\n');\r\n      cert = `-----BEGIN CERTIFICATE-----\\n${cert}\\n-----END CERTIFICATE-----\\n`;\r\n      if (jwk.kid === decodedToken.header.kid) {\r\n        try {\r\n          const verifiedToken = jwt.verify(token, cert);\r\n          const expiresAt = verifiedToken.exp * 1000;\r\n\r\n          return (verifiedToken && new Date().getTime() < expiresAt) ? verifiedToken : undefined;\r\n        } catch(err) {\r\n          return undefined;\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  async clientAuth () {\r\n    // return this.isAuthenticated()\r\n    const token = Cookies.getJSON('jwt')\r\n    const verifiedToken = this.verifyToken(token)\r\n    // console.log(verifiedToken)\r\n    return token\r\n  }\r\n\r\n  serverAuth (req) {\r\n    if (req.headers.cookie) {\r\n      const tokenCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith('jwt='))\r\n\r\n      // const cookies = req.handlers.cookie\r\n      // console.log(cookies)\r\n      // const splittedCookies = cookies.split(';')\r\n      // console.log(splittedCookies)\r\n      // const expiresAtCookie = splittedCookies.find(c => c.trim().startsWith('expiresAt='))\r\n      // console.log(expiresAtCookie)\r\n      // const expiresAtArray = expiresAtCookie.split('=')\r\n      // console.log(expiresAtArray)\r\n      // const expiresAt = expiresAtArray[1]\r\n      // console.log(expiresAt)\r\n\r\n      if (!tokenCookie) { return undefined }\r\n\r\n      const token = tokenCookie.split('=')[1]\r\n      const verifiedToken = this.verifyToken(token)\r\n\r\n      // return new Date().getTime() < expiresAt\r\n      return verifiedToken\r\n    }\r\n  }\r\n}\r\n\r\nconst auth0Client = new Auth0()\r\n\r\nexport default auth0Client\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAEA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;;;;;;;;AAGA;AACA;;AADA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;;;;;;AACA;;;;;AACA;AAAA;AAAA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AAEA;AACA;AAEA;AACA;;;;AACA;AACA;;AAGA;AACA;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAEA;;;;A","sourceRoot":""}