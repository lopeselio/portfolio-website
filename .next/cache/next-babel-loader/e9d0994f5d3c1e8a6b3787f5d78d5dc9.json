{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { getCookiesFromReq } from '../helpers/utils';\n\nvar setAuthHeader = function setAuthHeader(req) {\n  var token = req ? getCookieFromReq(req, 'jwt') : Cookies.getJSON('jwt');\n\n  if (token) {\n    return {\n      headers: {\n        authorization: \"Bearer \".concat(Cookies.getJSON('jwt'))\n      }\n    };\n  }\n\n  return undefined;\n};\n\nexport var getSecretData = function getSecretData(req) {\n  var url;\n  return _regeneratorRuntime.async(function getSecretData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = 'http://localhost:3000/api/v1/secret';\n          return _context.abrupt(\"return\", axios.get(url, setAuthHeader(req)).then(function (response) {\n            return response.data;\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}; // export const getSecretDataServer = async (req) => {\n//   return await axios.get('http://localhost:3000/api/v1/secret', setAuthHeader(req) ).then(response => {return response.data})\n// }","map":{"version":3,"sources":["C:/Users/Elio/Desktop/Portfolio-Website/actions/index.js"],"names":["axios","Cookies","getCookiesFromReq","setAuthHeader","req","token","getCookieFromReq","getJSON","headers","authorization","undefined","getSecretData","url","get","then","response","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC7B,MAAMC,KAAK,GAAGD,GAAG,GAAGE,gBAAgB,CAACF,GAAD,EAAM,KAAN,CAAnB,GAAkCH,OAAO,CAACM,OAAR,CAAgB,KAAhB,CAAnD;;AACA,MAAIF,KAAJ,EAAW;AACT,WAAO;AAAEG,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,mBAAYR,OAAO,CAACM,OAAR,CAAgB,KAAhB,CAAZ;AAAf;AAAX,KAAP;AACD;;AACD,SAAOG,SAAP;AACD,CAND;;AAQA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBQ,UAAAA,GADqB,GACf,qCADe;AAAA,2CAEpBZ,KAAK,CAACa,GAAN,CAAUD,GAAV,EAAeT,aAAa,CAACC,GAAD,CAA5B,EAAmCU,IAAnC,CAAwC,UAAAC,QAAQ,EAAI;AAAE,mBAAOA,QAAQ,CAACC,IAAhB;AAAsB,WAA5E,CAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB,C,CAKP;AACA;AACA","sourcesContent":["import axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport { getCookiesFromReq } from '../helpers/utils'\r\n\r\nconst setAuthHeader = (req) => {\r\n  const token = req ? getCookieFromReq(req, 'jwt') : Cookies.getJSON('jwt')\r\n  if (token) {\r\n    return { headers: { authorization: `Bearer ${Cookies.getJSON('jwt')}` } }\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const getSecretData = async (req) => {\r\n  const url = 'http://localhost:3000/api/v1/secret'\r\n  return axios.get(url, setAuthHeader(req)).then(response => { return response.data })\r\n}\r\n\r\n// export const getSecretDataServer = async (req) => {\r\n//   return await axios.get('http://localhost:3000/api/v1/secret', setAuthHeader(req) ).then(response => {return response.data})\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}