{"ast":null,"code":"import auth0 from 'auth0-js';\nimport Cookies from 'js-cookie';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport { getCookiesFromReq } from '../helpers/utils';\n\nclass Auth0 {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-fee5qd3s.auth0.com',\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this); // this.isAuthenticated = this.isAuthenticated.bind(this)\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult); // history.replace('/home')\n\n          resolve();\n        } else if (err) {\n          // history.replace('/home')\n          reject(err);\n          console.log(err);\n        }\n      });\n    });\n  }\n\n  setSession(authResult) {\n    const expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime()); // localStorage.setItem('access_token', authResult.accessToken)\n    // localStorage.setItem('id_token', authResult.idToken)\n    // localStorage.setItem('expires_at'.expiresAt)\n    // Cookies.set('user', authResult.idTokenPayload)\n\n    Cookies.set('jwt', authResult.idToken);\n    Cookies.set('expiresAt', expiresAt);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  logout() {\n    Cookies.remove('user');\n    Cookies.remove('jwt');\n    Cookies.remove('expiresAt');\n    this.auth0.logout({\n      returnTo: '',\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561'\n    });\n  }\n\n  async getJWKS() {\n    const res = await axios.get('https://dev-fee5qd3s.auth0.com/.well-known/jwks.json');\n    const jwks = res.data;\n    return jwks;\n  } // isAuthenticated () {\n  //   const expiresAt = Cookies.getJSON('expiresAt')\n  //   // console.log(new Date().getTime() < expiresAt)\n  //   return new Date().getTime() < expiresAt\n  // }\n\n\n  async verifyToken(token) {\n    if (token) {\n      const decodedToken = jwt.decode(token, {\n        complete: true\n      });\n\n      if (!decodedToken) {\n        return undefined;\n      }\n\n      const jwks = await this.getJWKS();\n      console.log(jwks);\n      const jwk = jwks.keys[0];\n      console.log(jwk); // BUILD CERTIFICATE\n\n      let cert = jwk.x5c[0];\n      cert = cert.match(/.{1,64}/g).join('\\n');\n      cert = `-----BEGIN CERTIFICATE-----\\n${cert}\\n-----END CERTIFICATE-----\\n`;\n\n      if (jwk.kid === decodedToken.header.kid) {\n        try {\n          const verifiedToken = jwt.verify(token, cert);\n          const expiresAt = verifiedToken.exp * 1000;\n          return verifiedToken && new Date().getTime() < expiresAt ? verifiedToken : undefined;\n        } catch (err) {\n          return undefined;\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  async clientAuth() {\n    // return this.isAuthenticated()\n    const token = Cookies.getJSON('jwt');\n    const verifiedToken = this.verifyToken(token); // console.log(verifiedToken)\n\n    return verifiedToken;\n  }\n\n  async serverAuth(req) {\n    if (req.headers.cookie) {\n      const token = getCookieFromReq(req, 'jwt');\n      const verifiedToken = this.verifyToken(token);\n      return verifiedToken;\n    }\n  }\n\n}\n\nconst auth0Client = new Auth0();\nexport default auth0Client;","map":{"version":3,"sources":["C:/Users/Elio/Desktop/Portfolio-Website/services/auth0.js"],"names":["auth0","Cookies","jwt","axios","getCookiesFromReq","Auth0","constructor","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","Promise","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","set","authorize","remove","returnTo","getJWKS","res","get","jwks","data","verifyToken","token","decodedToken","decode","complete","undefined","jwk","keys","cert","x5c","match","join","kid","header","verifiedToken","verify","exp","clientAuth","getJSON","serverAuth","req","headers","cookie","getCookieFromReq","auth0Client"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js'\r\nimport Cookies from 'js-cookie'\r\nimport jwt from 'jsonwebtoken'\r\nimport axios from 'axios'\r\nimport { getCookiesFromReq } from '../helpers/utils'\r\n\r\nclass Auth0 {\r\n  constructor () {\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: 'dev-fee5qd3s.auth0.com',\r\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561',\r\n      redirectUri: 'http://localhost:3000/callback',\r\n      responseType: 'token id_token',\r\n      scope: 'openid profile'\r\n    })\r\n    this.login = this.login.bind(this)\r\n    this.logout = this.logout.bind(this)\r\n    this.handleAuthentication = this.handleAuthentication.bind(this)\r\n    // this.isAuthenticated = this.isAuthenticated.bind(this)\r\n  }\r\n\r\n  handleAuthentication () {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n        if (authResult && authResult.accessToken && authResult.idToken) {\r\n          this.setSession(authResult)\r\n          // history.replace('/home')\r\n          resolve()\r\n        } else if (err) {\r\n          // history.replace('/home')\r\n          reject(err)\r\n          console.log(err)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  setSession (authResult) {\r\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime())\r\n    // localStorage.setItem('access_token', authResult.accessToken)\r\n    // localStorage.setItem('id_token', authResult.idToken)\r\n    // localStorage.setItem('expires_at'.expiresAt)\r\n    // Cookies.set('user', authResult.idTokenPayload)\r\n    Cookies.set('jwt', authResult.idToken)\r\n    Cookies.set('expiresAt', expiresAt)\r\n  }\r\n\r\n  login () {\r\n    this.auth0.authorize()\r\n  }\r\n\r\n  logout () {\r\n    Cookies.remove('user')\r\n    Cookies.remove('jwt')\r\n    Cookies.remove('expiresAt')\r\n\r\n    this.auth0.logout({\r\n      returnTo: '',\r\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561'\r\n    })\r\n  }\r\n\r\n  async getJWKS () {\r\n    const res = await axios.get('https://dev-fee5qd3s.auth0.com/.well-known/jwks.json')\r\n    const jwks = res.data\r\n    return jwks\r\n  }\r\n\r\n  // isAuthenticated () {\r\n  //   const expiresAt = Cookies.getJSON('expiresAt')\r\n  //   // console.log(new Date().getTime() < expiresAt)\r\n  //   return new Date().getTime() < expiresAt\r\n  // }\r\n\r\n  async verifyToken (token) {\r\n    if (token) {\r\n      const decodedToken = jwt.decode(token, { complete: true })\r\n      if (!decodedToken) { return undefined }\r\n      const jwks = await this.getJWKS()\r\n      console.log(jwks)\r\n      const jwk = jwks.keys[0]\r\n      console.log(jwk)\r\n      // BUILD CERTIFICATE\r\n      let cert = jwk.x5c[0]\r\n      cert = cert.match(/.{1,64}/g).join('\\n')\r\n      cert = `-----BEGIN CERTIFICATE-----\\n${cert}\\n-----END CERTIFICATE-----\\n`\r\n      if (jwk.kid === decodedToken.header.kid) {\r\n        try {\r\n          const verifiedToken = jwt.verify(token, cert)\r\n          const expiresAt = verifiedToken.exp * 1000\r\n\r\n          return (verifiedToken && new Date().getTime() < expiresAt) ? verifiedToken : undefined\r\n        } catch (err) {\r\n          return undefined\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  async clientAuth () {\r\n    // return this.isAuthenticated()\r\n    const token = Cookies.getJSON('jwt')\r\n    const verifiedToken = this.verifyToken(token)\r\n    // console.log(verifiedToken)\r\n    return verifiedToken\r\n  }\r\n\r\n  async serverAuth (req) {\r\n    if (req.headers.cookie) {\r\n      const token = getCookieFromReq(req, 'jwt')\r\n      const verifiedToken = this.verifyToken(token)\r\n      return verifiedToken\r\n    }\r\n  }\r\n}\r\n\r\nconst auth0Client = new Auth0()\r\n\r\nexport default auth0Client\r\n"]},"metadata":{},"sourceType":"module"}