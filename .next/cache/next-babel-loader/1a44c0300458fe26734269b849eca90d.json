{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\n\nvar Auth0 =\n/*#__PURE__*/\nfunction () {\n  function Auth0() {\n    _classCallCheck(this, Auth0);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-fee5qd3s.auth0.com',\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.login = this.login.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n  }\n\n  _createClass(Auth0, [{\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this.auth0.parseHash(function (err, authResult) {\n          if (authResult && authResult.accessToken && authResult.idToken) {\n            _this.setSession(authResult); // history.replace('/home')\n\n\n            resolve();\n          } else if (err) {\n            // history.replace('/home')\n            reject(err);\n            console.log(err);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      var expiresAt = _JSON$stringify(authResult.expiresIn * 1000 + new Date().getTime());\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }]);\n\n  return Auth0;\n}();\n\nvar auth0Client = new Auth0();\nexport default auth0Client;","map":{"version":3,"sources":["C:/Users/Elio/Desktop/Portfolio-Website/services/auth0.js"],"names":["auth0","Auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","handleAuthentication","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","console","log","expiresAt","expiresIn","Date","getTime","authorize","auth0Client"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,UAAlB;;IAEMC,K;;;AACJ,mBAAe;AAAA;;AACb,SAAKD,KAAL,GAAa,IAAIA,KAAK,CAACE,OAAV,CAAkB;AAC7BC,MAAAA,MAAM,EAAE,wBADqB;AAE7BC,MAAAA,QAAQ,EAAE,kCAFmB;AAG7BC,MAAAA,WAAW,EAAE,gCAHgB;AAI7BC,MAAAA,YAAY,EAAE,gBAJe;AAK7BC,MAAAA,KAAK,EAAE;AALsB,KAAlB,CAAb;AAOA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;;;2CAEuB;AAAA;;AACtB,aAAO,aAAY,UAACE,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAA,KAAI,CAACZ,KAAL,CAAWa,SAAX,CAAqB,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACxC,cAAIA,UAAU,IAAIA,UAAU,CAACC,WAAzB,IAAwCD,UAAU,CAACE,OAAvD,EAAgE;AAC9D,YAAA,KAAI,CAACC,UAAL,CAAgBH,UAAhB,EAD8D,CAE9D;;;AACAJ,YAAAA,OAAO;AACR,WAJD,MAIO,IAAIG,GAAJ,EAAS;AACd;AACAF,YAAAA,MAAM,CAACE,GAAD,CAAN;AACAK,YAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACD;AACF,SAVD;AAWD,OAZM,CAAP;AAaD;;;+BAEWC,U,EAAY;AACtB,UAAIM,SAAS,GAAG,gBAAgBN,UAAU,CAACO,SAAX,GAAuB,IAAxB,GAAgC,IAAIC,IAAJ,GAAWC,OAAX,EAA/C,CAAhB;AACD;;;4BAEQ;AACP,WAAKxB,KAAL,CAAWyB,SAAX;AACD;;;;;;AAGH,IAAMC,WAAW,GAAG,IAAIzB,KAAJ,EAApB;AAEA,eAAeyB,WAAf","sourcesContent":["import auth0 from 'auth0-js'\r\n\r\nclass Auth0 {\r\n  constructor () {\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: 'dev-fee5qd3s.auth0.com',\r\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561',\r\n      redirectUri: 'http://localhost:3000/callback',\r\n      responseType: 'token id_token',\r\n      scope: 'openid profile'\r\n    })\r\n    this.login = this.login.bind(this)\r\n    this.handleAuthentication = this.handleAuthentication.bind(this)\r\n  }\r\n\r\n  handleAuthentication () {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n        if (authResult && authResult.accessToken && authResult.idToken) {\r\n          this.setSession(authResult)\r\n          // history.replace('/home')\r\n          resolve()\r\n        } else if (err) {\r\n          // history.replace('/home')\r\n          reject(err)\r\n          console.log(err)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  setSession (authResult) {\r\n    let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime())\r\n  }\r\n\r\n  login () {\r\n    this.auth0.authorize()\r\n  }\r\n}\r\n\r\nconst auth0Client = new Auth0()\r\n\r\nexport default auth0Client\r\n"]},"metadata":{},"sourceType":"module"}