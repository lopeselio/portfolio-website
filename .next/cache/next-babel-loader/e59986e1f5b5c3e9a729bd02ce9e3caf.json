{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar PortfolioCreateForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(PortfolioCreateForm, _React$Component);\n\n  var _super = _createSuper(PortfolioCreateForm);\n\n  function PortfolioCreateForm(props) {\n    var _this;\n\n    _classCallCheck(this, PortfolioCreateForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PortfolioCreateForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"form\", {\n        onSubmit: this.handleSubmit\n      }, __jsx(\"label\", null, \"Name:\", __jsx(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange\n      })), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }));\n    }\n  }]);\n\n  return PortfolioCreateForm;\n}(React.Component);\n\nexport { PortfolioCreateForm as default };","map":{"version":3,"sources":["C:/Users/Elio/Desktop/Portfolio-Website/components/portfolios/PortfolioCreateForm.js"],"names":["React","PortfolioCreateForm","props","state","value","handleChange","bind","handleSubmit","event","setState","target","alert","preventDefault","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,mB;;;;;AAEnB,+BAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAEA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AALkB;AAMnB;;;;iCAEaE,K,EAAO;AACnB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAAtB,OAAd;AACD;;;iCAEaI,K,EAAO;AACnBG,MAAAA,KAAK,CAAC,2BAA2B,KAAKR,KAAL,CAAWC,KAAvC,CAAL;AACAI,MAAAA,KAAK,CAACI,cAAN;AACD;;;6BAES;AACR,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKL;AAArB,SACE,8BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAArC;AAA4C,QAAA,QAAQ,EAAE,KAAKC;AAA3D,QAFF,CADF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B,QALF,CADF;AASD;;;;EA7B8CL,KAAK,CAACa,S;;SAAlCZ,mB","sourcesContent":["import React from 'react'\r\n\r\nexport default class PortfolioCreateForm extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { value: '' }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange (event) {\r\n    this.setState({ value: event.target.value })\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    alert('A name was submitted: ' + this.state.value)\r\n    event.preventDefault()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type='text' value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        <input type='submit' value='Submit' />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}