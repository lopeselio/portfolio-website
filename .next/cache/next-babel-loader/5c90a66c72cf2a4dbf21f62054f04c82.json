{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\nimport Cookies from 'js-cookie';\nimport jwt from 'jsonwebtoken';\n\nvar Auth0 =\n/*#__PURE__*/\nfunction () {\n  function Auth0() {\n    _classCallCheck(this, Auth0);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-fee5qd3s.auth0.com',\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth0, [{\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this.auth0.parseHash(function (err, authResult) {\n          if (authResult && authResult.accessToken && authResult.idToken) {\n            _this.setSession(authResult); // history.replace('/home')\n\n\n            resolve();\n          } else if (err) {\n            // history.replace('/home')\n            reject(err);\n            console.log(err);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      var expiresAt = _JSON$stringify(authResult.expiresIn * 1000 + new Date().getTime()); // localStorage.setItem('access_token', authResult.accessToken)\n      // localStorage.setItem('id_token', authResult.idToken)\n      // localStorage.setItem('expires_at'.expiresAt)\n\n\n      Cookies.set('user', authResult.idTokenPayload);\n      Cookies.set('jwt', authResult.idToken);\n      Cookies.set('expiresAt', expiresAt);\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      Cookies.remove('user');\n      Cookies.remove('jwt');\n      Cookies.remove('expiresAt');\n      this.auth0.logout({\n        returnTo: '',\n        clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561'\n      });\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var expiresAt = Cookies.getJSON('expiresAt'); // console.log(new Date().getTime() < expiresAt)\n\n      return new Date().getTime() < expiresAt;\n    }\n  }, {\n    key: \"verifyTOken\",\n    value: function verifyTOken(token) {\n      if (token) {}\n\n      return;\n    }\n  }, {\n    key: \"clientAuth\",\n    value: function clientAuth() {\n      return this.isAuthenticated();\n    }\n  }, {\n    key: \"serverAuth\",\n    value: function serverAuth(req) {\n      if (req.headers.cookie) {\n        var expiresAtCookie = req.headers.cookie.split(';').find(function (c) {\n          return c.trim().startsWith('expiresAt=');\n        }); // const cookies = req.handlers.cookie\n        // console.log(cookies)\n        // const splittedCookies = cookies.split(';')\n        // console.log(splittedCookies)\n        // const expiresAtCookie = splittedCookies.find(c => c.trim().startsWith('expiresAt='))\n        // console.log(expiresAtCookie)\n        // const expiresAtArray = expiresAtCookie.split('=')\n        // console.log(expiresAtArray)\n        // const expiresAt = expiresAtArray[1]\n        // console.log(expiresAt)\n\n        if (!expiresAtCookie) {\n          return undefined;\n        }\n\n        var expiresAt = expiresAtCookie.split('=')[1];\n        return new Date().getTime() < expiresAt;\n      }\n    }\n  }]);\n\n  return Auth0;\n}();\n\nvar auth0Client = new Auth0();\nexport default auth0Client;","map":{"version":3,"sources":["C:/Users/Elio/Desktop/Portfolio-Website/services/auth0.js"],"names":["auth0","Cookies","jwt","Auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","console","log","expiresAt","expiresIn","Date","getTime","set","idTokenPayload","authorize","remove","returnTo","getJSON","token","req","headers","cookie","expiresAtCookie","split","find","c","trim","startsWith","undefined","auth0Client"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js'\r\nimport Cookies from 'js-cookie'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nclass Auth0 {\r\n  constructor () {\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: 'dev-fee5qd3s.auth0.com',\r\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561',\r\n      redirectUri: 'http://localhost:3000/callback',\r\n      responseType: 'token id_token',\r\n      scope: 'openid profile'\r\n    })\r\n    this.login = this.login.bind(this)\r\n    this.logout = this.logout.bind(this)\r\n    this.handleAuthentication = this.handleAuthentication.bind(this)\r\n    this.isAuthenticated = this.isAuthenticated.bind(this)\r\n  }\r\n\r\n  handleAuthentication () {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n        if (authResult && authResult.accessToken && authResult.idToken) {\r\n          this.setSession(authResult)\r\n          // history.replace('/home')\r\n          resolve()\r\n        } else if (err) {\r\n          // history.replace('/home')\r\n          reject(err)\r\n          console.log(err)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  setSession (authResult) {\r\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime())\r\n    // localStorage.setItem('access_token', authResult.accessToken)\r\n    // localStorage.setItem('id_token', authResult.idToken)\r\n    // localStorage.setItem('expires_at'.expiresAt)\r\n    Cookies.set('user', authResult.idTokenPayload)\r\n    Cookies.set('jwt', authResult.idToken)\r\n    Cookies.set('expiresAt', expiresAt)\r\n  }\r\n\r\n  login () {\r\n    this.auth0.authorize()\r\n  }\r\n\r\n  logout () {\r\n    Cookies.remove('user')\r\n    Cookies.remove('jwt')\r\n    Cookies.remove('expiresAt')\r\n\r\n    this.auth0.logout({\r\n      returnTo: '',\r\n      clientID: 'PRojVaD1nApgzyFqr90GZGI9kNxIj561'\r\n    })\r\n  }\r\n\r\n  isAuthenticated () {\r\n    const expiresAt = Cookies.getJSON('expiresAt')\r\n    // console.log(new Date().getTime() < expiresAt)\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n  verifyTOken(token) {\r\n    if(token){\r\n\r\n    }\r\n    return\r\n  }\r\n\r\n  clientAuth () {\r\n    return this.isAuthenticated()\r\n  }\r\n\r\n  serverAuth (req) {\r\n    if (req.headers.cookie) {\r\n      const expiresAtCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith('expiresAt='))\r\n\r\n      // const cookies = req.handlers.cookie\r\n      // console.log(cookies)\r\n      // const splittedCookies = cookies.split(';')\r\n      // console.log(splittedCookies)\r\n      // const expiresAtCookie = splittedCookies.find(c => c.trim().startsWith('expiresAt='))\r\n      // console.log(expiresAtCookie)\r\n      // const expiresAtArray = expiresAtCookie.split('=')\r\n      // console.log(expiresAtArray)\r\n      // const expiresAt = expiresAtArray[1]\r\n      // console.log(expiresAt)\r\n\r\n      if (!expiresAtCookie) { return undefined }\r\n\r\n      const expiresAt = expiresAtCookie.split('=')[1]\r\n\r\n      return new Date().getTime() < expiresAt\r\n    }\r\n  }\r\n}\r\n\r\nconst auth0Client = new Auth0()\r\n\r\nexport default auth0Client\r\n"]},"metadata":{},"sourceType":"module"}